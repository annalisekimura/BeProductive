{"ast":null,"code":"var _jsxFileName = \"/Users/annalisekimura/Desktop/Calendar/calendar/src/Pages/MonthPage.js\";\nimport React from 'react';\nimport '../App.css';\nimport Fullcalendar from \"@fullcalendar/react\";\nimport dayGridPlugin from \"@fullcalendar/daygrid\";\nimport timeGridPlugin from \"@fullcalendar/timegrid\";\nimport interactionPlugin from \"@fullcalendar/interaction\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MonthPage() {\n  document.addEventListener('DOMContentLoaded', function () {\n    var calendarEl = document.getElementById('calendar');\n    var calendar = new FullCalendar.Calendar(calendarEl, {\n      initialView: 'dayGridMonth',\n      headerToolbar: {\n        center: 'addEventButton'\n      },\n      customButtons: {\n        addEventButton: {\n          text: 'add event...',\n          click: function () {\n            var dateStr = prompt('Enter a date in YYYY-MM-DD format');\n            var date = new Date(dateStr + 'T00:00:00'); // will be in local time\n\n            if (!isNaN(date.valueOf())) {\n              // valid?\n              calendar.addEvent({\n                title: 'dynamic event',\n                start: date,\n                allDay: true\n              });\n              alert('Great. Now, update your database...');\n            } else {\n              alert('Invalid date.');\n            }\n          }\n        }\n      }\n    });\n    calendar.render();\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Month\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Fullcalendar, {\n      plugins: [dayGridPlugin, timeGridPlugin, interactionPlugin],\n      initialView: \"dayGridMonth\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }, this);\n}\n_c = MonthPage;\nexport default MonthPage;\nvar _c;\n$RefreshReg$(_c, \"MonthPage\");","map":{"version":3,"names":["React","Fullcalendar","dayGridPlugin","timeGridPlugin","interactionPlugin","jsxDEV","_jsxDEV","MonthPage","document","addEventListener","calendarEl","getElementById","calendar","FullCalendar","Calendar","initialView","headerToolbar","center","customButtons","addEventButton","text","click","dateStr","prompt","date","Date","isNaN","valueOf","addEvent","title","start","allDay","alert","render","children","fileName","_jsxFileName","lineNumber","columnNumber","plugins","_c","$RefreshReg$"],"sources":["/Users/annalisekimura/Desktop/Calendar/calendar/src/Pages/MonthPage.js"],"sourcesContent":["import React from 'react';\nimport '../App.css'; \nimport Fullcalendar from \"@fullcalendar/react\";\nimport dayGridPlugin from \"@fullcalendar/daygrid\";\nimport timeGridPlugin from \"@fullcalendar/timegrid\";\nimport interactionPlugin from \"@fullcalendar/interaction\";\n\n\nfunction MonthPage() {\n\n    document.addEventListener('DOMContentLoaded', function() {\n        var calendarEl = document.getElementById('calendar');\n    \n        var calendar = new FullCalendar.Calendar(calendarEl, {\n          initialView: 'dayGridMonth',\n          headerToolbar: {\n            center: 'addEventButton'\n          },\n          customButtons: {\n            addEventButton: {\n              text: 'add event...',\n              click: function() {\n                var dateStr = prompt('Enter a date in YYYY-MM-DD format');\n                var date = new Date(dateStr + 'T00:00:00'); // will be in local time\n    \n                if (!isNaN(date.valueOf())) { // valid?\n                  calendar.addEvent({\n                    title: 'dynamic event',\n                    start: date,\n                    allDay: true\n                  });\n                  alert('Great. Now, update your database...');\n                } else {\n                  alert('Invalid date.');\n                }\n              }\n            }\n          }\n        });\n    \n        calendar.render();\n      });\n\n    \n    return (\n        \n        <div>\n\n            \n            <h1>Month</h1>\n            <Fullcalendar\n                plugins={[dayGridPlugin, timeGridPlugin, interactionPlugin]}\n                initialView=\"dayGridMonth\"\n            />\n            \n        </div>\n    );\n}\n\nexport default MonthPage;\n\n\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,YAAY;AACnB,OAAOC,YAAY,MAAM,qBAAqB;AAC9C,OAAOC,aAAa,MAAM,uBAAuB;AACjD,OAAOC,cAAc,MAAM,wBAAwB;AACnD,OAAOC,iBAAiB,MAAM,2BAA2B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAG1D,SAASC,SAASA,CAAA,EAAG;EAEjBC,QAAQ,CAACC,gBAAgB,CAAC,kBAAkB,EAAE,YAAW;IACrD,IAAIC,UAAU,GAAGF,QAAQ,CAACG,cAAc,CAAC,UAAU,CAAC;IAEpD,IAAIC,QAAQ,GAAG,IAAIC,YAAY,CAACC,QAAQ,CAACJ,UAAU,EAAE;MACnDK,WAAW,EAAE,cAAc;MAC3BC,aAAa,EAAE;QACbC,MAAM,EAAE;MACV,CAAC;MACDC,aAAa,EAAE;QACbC,cAAc,EAAE;UACdC,IAAI,EAAE,cAAc;UACpBC,KAAK,EAAE,SAAAA,CAAA,EAAW;YAChB,IAAIC,OAAO,GAAGC,MAAM,CAAC,mCAAmC,CAAC;YACzD,IAAIC,IAAI,GAAG,IAAIC,IAAI,CAACH,OAAO,GAAG,WAAW,CAAC,CAAC,CAAC;;YAE5C,IAAI,CAACI,KAAK,CAACF,IAAI,CAACG,OAAO,CAAC,CAAC,CAAC,EAAE;cAAE;cAC5Bf,QAAQ,CAACgB,QAAQ,CAAC;gBAChBC,KAAK,EAAE,eAAe;gBACtBC,KAAK,EAAEN,IAAI;gBACXO,MAAM,EAAE;cACV,CAAC,CAAC;cACFC,KAAK,CAAC,qCAAqC,CAAC;YAC9C,CAAC,MAAM;cACLA,KAAK,CAAC,eAAe,CAAC;YACxB;UACF;QACF;MACF;IACF,CAAC,CAAC;IAEFpB,QAAQ,CAACqB,MAAM,CAAC,CAAC;EACnB,CAAC,CAAC;EAGJ,oBAEI3B,OAAA;IAAA4B,QAAA,gBAGI5B,OAAA;MAAA4B,QAAA,EAAI;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACdhC,OAAA,CAACL,YAAY;MACTsC,OAAO,EAAE,CAACrC,aAAa,EAAEC,cAAc,EAAEC,iBAAiB,CAAE;MAC5DW,WAAW,EAAC;IAAc;MAAAoB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7B,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAED,CAAC;AAEd;AAACE,EAAA,GAjDQjC,SAAS;AAmDlB,eAAeA,SAAS;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}