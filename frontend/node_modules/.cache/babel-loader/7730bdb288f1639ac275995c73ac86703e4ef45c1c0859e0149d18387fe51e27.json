{"ast":null,"code":"var _jsxFileName = \"/Users/annalisekimura/Desktop/Calendar/calendar/src/Pages/Week.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport '../App.css';\nimport Fullcalendar from \"@fullcalendar/react\";\nimport dayGridPlugin from \"@fullcalendar/daygrid\";\nimport timeGridPlugin from \"@fullcalendar/timegrid\";\nimport interactionPlugin, { Draggable } from \"@fullcalendar/interaction\";\nimport { useContext } from 'react';\nimport { WeekContext } from './WeekContext';\nimport { EventContext } from './EventContext';\nimport { useRef, useEffect } from 'react';\nimport myImage from './FinishBucket.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction WeekPage() {\n  _s();\n  const calendarRef = useRef(null);\n  const {\n    events2,\n    setEvents2\n  } = useContext(WeekContext);\n  const {\n    events\n  } = useContext(EventContext);\n  useEffect(() => {\n    const storedEvents = JSON.parse(localStorage.getItem('calendarEventsWeek'));\n    if (storedEvents) {\n      setEvents2(storedEvents);\n    }\n  }, [setEvents2]);\n  useEffect(() => {\n    // Initialize Draggable for external events\n    new Draggable(externalEventsRef.current, {\n      itemSelector: '.fc-event',\n      eventData: function (eventEl) {\n        return {\n          title: eventEl.innerText.trim(),\n          id: Date.now()\n        };\n      }\n    });\n  }, []);\n  const handleEventAdd = event => {\n    const newEvents = [...events2, event];\n    setEvents2(newEvents);\n    localStorage.setItem('calendarEventsWeek', JSON.stringify(newEvents));\n  };\n  const handleEventClick = info => {\n    const event = info.event;\n    const choice = prompt(`Do you want to edit or delete the event \"${event.title}\"?\\nType 'Edit' or 'Delete'`);\n    if (choice === 'Edit') {\n      const newTitle = prompt('Enter the new title for the event:', event.title);\n      if (newTitle) {\n        event.setProp('title', newTitle);\n        const updatedEvents = events2.map(evt => evt.id === event.id ? {\n          ...evt,\n          title: newTitle\n        } : evt);\n        setEvents2(updatedEvents);\n        localStorage.setItem('calendarEventsWeek', JSON.stringify(updatedEvents));\n        alert('Event updated. Now, update your database...');\n      } else {\n        alert('Event title cannot be empty.');\n      }\n    } else if (choice === 'Delete') {\n      const updatedEvents = events2.filter(evt => evt.id !== parseInt(event.id, 10));\n      event.remove();\n      setEvents2(updatedEvents);\n      localStorage.setItem('calendarEventsWeek', JSON.stringify(updatedEvents));\n      alert('Event deleted. Now, update your database...');\n    }\n  };\n  const handleEventDragStart = info => {\n    info.jsEvent.dataTransfer.setData(\"eventId\", info.event.id);\n  };\n  const handleEventDrop = eventId => {\n    const updatedEvents = events2.filter(evt => evt.id !== parseInt(eventId, 10));\n    setEvents2(updatedEvents);\n    localStorage.setItem('calendarEventsWeek', JSON.stringify(updatedEvents));\n    alert('Event completed and removed. Now, update your database...');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"weekly-calendar\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Week\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Fullcalendar, {\n        ref: calendarRef,\n        plugins: [dayGridPlugin, timeGridPlugin, interactionPlugin],\n        initialView: \"timeGridWeek\",\n        headerToolbar: {\n          center: 'addEventButton'\n        },\n        customButtons: {\n          addEventButton: {\n            text: 'add event...',\n            click: function () {\n              var dateStr = prompt('Enter a date in YYYY-MM-DD format');\n              var date = new Date(dateStr + 'T00:00:00'); // will be in local time\n\n              if (!isNaN(date.valueOf())) {\n                // valid?\n                var title = prompt('Enter the event title:');\n                var id = Date.now();\n                const calendarApi = calendarRef.current.getApi();\n                const newEvent = {\n                  id: id,\n                  title: title,\n                  start: date,\n                  allDay: true\n                };\n                calendarApi.addEvent(newEvent);\n                handleEventAdd(newEvent);\n                alert('Great. Now, update your database...');\n              } else {\n                alert('Invalid date.');\n              }\n            }\n          }\n        },\n        events: events2,\n        eventClick: handleEventClick,\n        eventDragStart: handleEventDragStart\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"event-list\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Important Dates\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        id: \"lists\",\n        children: events.map((event, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [event.title, \" - \", new Date(event.start).toLocaleDateString()]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"finishLine\",\n          src: myImage,\n          alt: \"My Image\",\n          onDrop: e => {\n            e.preventDefault();\n            const eventId = e.dataTransfer.getData(\"eventId\");\n            handleEventDrop(eventId);\n          },\n          onDragOver: e => e.preventDefault()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 9\n  }, this);\n}\n_s(WeekPage, \"E3lBWz3/21d39uu9Kc5yu66aydw=\");\n_c = WeekPage;\nexport default WeekPage;\nvar _c;\n$RefreshReg$(_c, \"WeekPage\");","map":{"version":3,"names":["React","Fullcalendar","dayGridPlugin","timeGridPlugin","interactionPlugin","Draggable","useContext","WeekContext","EventContext","useRef","useEffect","myImage","jsxDEV","_jsxDEV","WeekPage","_s","calendarRef","events2","setEvents2","events","storedEvents","JSON","parse","localStorage","getItem","externalEventsRef","current","itemSelector","eventData","eventEl","title","innerText","trim","id","Date","now","handleEventAdd","event","newEvents","setItem","stringify","handleEventClick","info","choice","prompt","newTitle","setProp","updatedEvents","map","evt","alert","filter","parseInt","remove","handleEventDragStart","jsEvent","dataTransfer","setData","handleEventDrop","eventId","className","children","fileName","_jsxFileName","lineNumber","columnNumber","ref","plugins","initialView","headerToolbar","center","customButtons","addEventButton","text","click","dateStr","date","isNaN","valueOf","calendarApi","getApi","newEvent","start","allDay","addEvent","eventClick","eventDragStart","index","toLocaleDateString","src","alt","onDrop","e","preventDefault","getData","onDragOver","_c","$RefreshReg$"],"sources":["/Users/annalisekimura/Desktop/Calendar/calendar/src/Pages/Week.js"],"sourcesContent":["import React from 'react';\nimport '../App.css'; \nimport Fullcalendar from \"@fullcalendar/react\";\nimport dayGridPlugin from \"@fullcalendar/daygrid\";\nimport timeGridPlugin from \"@fullcalendar/timegrid\";\nimport interactionPlugin, {Draggable} from \"@fullcalendar/interaction\";\nimport { useContext } from 'react';\nimport { WeekContext } from './WeekContext';\nimport { EventContext } from './EventContext';\nimport { useRef, useEffect } from 'react';\n\nimport myImage from './FinishBucket.png';\n\n\n\nfunction WeekPage() {\n    const calendarRef = useRef(null);\n    const {events2, setEvents2} = useContext(WeekContext);\n    const {events} = useContext(EventContext);\n\n    useEffect(() => {\n        const storedEvents = JSON.parse(localStorage.getItem('calendarEventsWeek'));\n        if (storedEvents) {\n            setEvents2(storedEvents)\n        }\n    }, [setEvents2]);\n\n    useEffect(() => {\n        // Initialize Draggable for external events\n        new Draggable(externalEventsRef.current, {\n            itemSelector: '.fc-event',\n            eventData: function(eventEl) {\n                return {\n                    title: eventEl.innerText.trim(),\n                    id: Date.now()\n                };\n            }\n        });\n    }, []);\n\n    const handleEventAdd = (event) => {\n        const newEvents = [...events2, event];\n        setEvents2(newEvents);\n        localStorage.setItem('calendarEventsWeek', JSON.stringify(newEvents));\n    }\n\n\n    const handleEventClick = (info) => {\n        const event = info.event;\n        const choice = prompt(`Do you want to edit or delete the event \"${event.title}\"?\\nType 'Edit' or 'Delete'`);\n    \n        if (choice === 'Edit') {\n          const newTitle = prompt('Enter the new title for the event:', event.title);\n          if (newTitle) {\n            event.setProp('title', newTitle);\n            const updatedEvents = events2.map(evt => evt.id === event.id ? {...evt, title: newTitle} : evt);\n            setEvents2(updatedEvents);\n            localStorage.setItem('calendarEventsWeek', JSON.stringify(updatedEvents));\n            alert('Event updated. Now, update your database...');\n          } else {\n            alert('Event title cannot be empty.');\n          }\n        } else if (choice === 'Delete') {\n          \n          const updatedEvents = events2.filter(evt => evt.id !== parseInt(event.id, 10));\n          event.remove();\n          \n          setEvents2(updatedEvents);\n          \n          localStorage.setItem('calendarEventsWeek', JSON.stringify(updatedEvents));\n          alert('Event deleted. Now, update your database...');\n        }\n      };\n\n      const handleEventDragStart = (info) => {\n        info.jsEvent.dataTransfer.setData(\"eventId\", info.event.id);\n    }\n\n    const handleEventDrop = (eventId) => {\n        const updatedEvents = events2.filter(evt => evt.id !== parseInt(eventId, 10));\n        setEvents2(updatedEvents);\n        localStorage.setItem('calendarEventsWeek', JSON.stringify(updatedEvents));\n        alert('Event completed and removed. Now, update your database...');\n    }\n\n\n    return (\n        <div className=\"container\">\n            <div className=\"weekly-calendar\">\n                <h1>Week</h1>\n                <Fullcalendar\n                    ref={calendarRef}\n                    plugins={[dayGridPlugin, timeGridPlugin, interactionPlugin]}\n                    initialView=\"timeGridWeek\"\n                    headerToolbar={{\n                        center: 'addEventButton'\n                      }}\n                      customButtons={{\n                        addEventButton: {\n                          text: 'add event...',\n                          click: function() {\n                            var dateStr = prompt('Enter a date in YYYY-MM-DD format');\n                            var date = new Date(dateStr + 'T00:00:00'); // will be in local time\n                \n                            if (!isNaN(date.valueOf())) { // valid?\n                                var title = prompt('Enter the event title:');\n                                var id = Date.now();\n    \n                                    const calendarApi = calendarRef.current.getApi()\n                                    const newEvent = {\n                                        id: id,\n                                        title: title,\n                                        start: date,\n                                        allDay: true\n                                    }\n                              calendarApi.addEvent(newEvent);\n                              handleEventAdd(newEvent);\n                              alert('Great. Now, update your database...');\n                            } else {\n                              alert('Invalid date.');\n                            }\n                          }\n                        }\n                      }}\n                      events={events2}\n                      eventClick={handleEventClick}\n                      eventDragStart={handleEventDragStart}\n\n                />\n            </div>\n            <div className=\"event-list\">\n                <h2>Important Dates</h2>\n                <ul id=\"lists\">\n                    {events.map((event, index) => (\n                        <li key={index}>\n                            {event.title} - {new Date(event.start).toLocaleDateString()}\n                        </li>\n                    ))}\n                </ul>\n\n                <div>\n                    <img className=\"finishLine\"\n                        src={myImage}\n                        alt=\"My Image\"\n                        onDrop={(e) => {\n                            e.preventDefault();\n                            const eventId = e.dataTransfer.getData(\"eventId\");\n                            handleEventDrop(eventId);\n                        }}\n                        onDragOver={(e) => e.preventDefault()}\n                     />\n                </div>\n\n                \n            </div>\n            \n        </div>\n    );\n}\n\nexport default WeekPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}