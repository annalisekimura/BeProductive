{"ast":null,"code":"var _jsxFileName = \"/Users/annalisekimura/Desktop/Calendar/calendar/frontend/src/Pages/Week.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport '../App.css';\nimport './week.css';\nimport Fullcalendar from \"@fullcalendar/react\";\nimport dayGridPlugin from \"@fullcalendar/daygrid\";\nimport timeGridPlugin from \"@fullcalendar/timegrid\";\nimport interactionPlugin, { Draggable } from \"@fullcalendar/interaction\";\nimport { useContext } from 'react';\nimport { WeekContext } from './WeekContext';\nimport { EventContext } from './EventContext';\nimport { useRef, useEffect } from 'react';\nimport Confetti from \"react-confetti\";\nimport myImage from './FinishBucket.png';\nimport { useState } from 'react';\nimport Sidebar from '../Components/sidebar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction WeekPage() {\n  _s();\n  const calendarRef = useRef(null);\n  const {\n    events2,\n    setEvents2\n  } = useContext(WeekContext);\n  const {\n    events\n  } = useContext(EventContext);\n  const [confetti, setConfetti] = useState(false);\n  const [importantEventsThisWeek, setImportantEventsThisWeek] = useState([]);\n\n  // Get stored events to display\n  useEffect(() => {\n    const storedEvents = JSON.parse(localStorage.getItem('calendarEventsWeek'));\n    if (storedEvents) {\n      setEvents2(storedEvents);\n    }\n  }, [setEvents2]);\n  const clearAllEvents = () => {\n    setEvents2([]);\n    localStorage.setItem('calendarEventsWeek', JSON.stringify([]));\n    const calendarApi = calendarRef.current.getApi();\n    calendarApi.removeAllEvents();\n  };\n\n  // Get finish line image\n  useEffect(() => {\n    let containerEl = document.getElementById('image-container');\n    new Draggable(containerEl, {\n      itemSelector: '.finishLine'\n    });\n  }, []);\n  useEffect(() => {\n    if (calendarRef.current) {\n      filterEventsForCurrentWeek();\n    }\n  }, [events, calendarRef.current]);\n\n  // Add an event\n  const handleEventAdd = event => {\n    const newEvents = [...events2, event];\n    setEvents2(newEvents);\n    localStorage.setItem('calendarEventsWeek', JSON.stringify(newEvents));\n  };\n\n  // Delete event when finished\n  const handleEventDrop = eventId => {\n    const updatedEvents = events2.filter(evt => evt.id !== parseInt(eventId, 10));\n    setEvents2(updatedEvents);\n    localStorage.setItem('calendarEventsWeek', JSON.stringify(updatedEvents));\n\n    // Render confetti\n    setConfetti(true);\n    setTimeout(() => setConfetti(false), 3000);\n  };\n\n  // Update calendar when drag event\n  const handleEventDropOrResize = info => {\n    const event = info.event;\n    const updatedEvents = events2.map(evt => evt.id === parseInt(event.id, 10) ? {\n      ...evt,\n      start: event.start.toISOString()\n    } : evt);\n    setEvents2(updatedEvents);\n    localStorage.setItem('calendarEventsWeek', JSON.stringify(updatedEvents));\n  };\n\n  // Delete or edit event when clicked\n  const handleEventClick = info => {\n    const event = info.event;\n    const choice = prompt(`Do you want to edit or delete the event \"${event.title}\"?\\nType 'Edit' or 'Delete'`);\n    if (choice === 'Edit') {\n      const newTitle = prompt('Enter the new title for the event:', event.title);\n      if (newTitle) {\n        event.setProp('title', newTitle);\n        const updatedEvents = events2.map(evt => evt.id === event.id ? {\n          ...evt,\n          title: newTitle\n        } : evt);\n        setEvents2(updatedEvents);\n        localStorage.setItem('calendarEventsWeek', JSON.stringify(updatedEvents));\n      }\n    } else if (choice === 'Delete') {\n      const updatedEvents = events2.filter(evt => evt.id !== parseInt(event.id, 10));\n      event.remove();\n      setEvents2(updatedEvents);\n      localStorage.setItem('calendarEventsWeek', JSON.stringify(updatedEvents));\n      alert('Event deleted. Now, update your database...');\n    }\n  };\n  const filterEventsForCurrentWeek = () => {\n    const calendarApi = calendarRef.current.getApi();\n    const currentStart = calendarApi.view.currentStart;\n    const currentEnd = calendarApi.view.currentEnd;\n    const filteredEvents = events.filter(event => {\n      const eventDate = new Date(event.start);\n      return eventDate >= currentStart && eventDate < currentEnd;\n    });\n    setImportantEventsThisWeek(filteredEvents);\n  };\n  useEffect(() => {\n    const imageElement = document.querySelector('.finishLine');\n    if (imageElement) {\n      // Get the position relative to the viewport\n      const imagePosition = imageElement.getBoundingClientRect();\n      console.log('Image Position:');\n      const leftPos = imagePosition.left;\n      const rightPos = imagePosition.right;\n      console.log('Right:', imagePosition.right);\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(Sidebar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content2\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"weekly-calendar\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Week\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Fullcalendar, {\n          ref: calendarRef,\n          plugins: [dayGridPlugin, timeGridPlugin, interactionPlugin],\n          initialView: \"timeGridWeek\",\n          dateClick: function (info) {\n            var date = info.dateStr;\n            console.log(info.dateStr);\n            var title = prompt('Enter the event title:');\n            var id = Date.now();\n            const calendarApi = calendarRef.current.getApi();\n            const newEvent = {\n              id: id,\n              title: title,\n              start: date,\n              allDay: false\n            };\n            calendarApi.addEvent(newEvent);\n            handleEventAdd(newEvent);\n          }\n\n          //header buttons\n          ,\n          headerToolbar: {\n            center: 'addEventButton'\n          },\n          customButtons: {\n            addEventButton: {\n              text: 'add event...',\n              click: function () {\n                var dateStr = prompt('Enter a date in YYYY-MM-DD format');\n                var timeStr = prompt('Enter a time in T00:00:00 format');\n                var date = new Date(dateStr + timeStr); // local time\n\n                if (!isNaN(date.valueOf())) {\n                  var title = prompt('Enter the event title:');\n                  var id = Date.now();\n                  const calendarApi = calendarRef.current.getApi();\n                  const newEvent = {\n                    id: id,\n                    title: title,\n                    start: date,\n                    allDay: false\n                  };\n                  calendarApi.addEvent(newEvent);\n                  handleEventAdd(newEvent);\n                } else {\n                  alert('Invalid date.');\n                }\n              }\n            }\n          },\n          events: events2,\n          eventClick: handleEventClick,\n          editable: true,\n          droppable: true,\n          eventDidMount: info => {\n            const eventEl = info.el;\n            eventEl.setAttribute('draggable', true);\n            eventEl.addEventListener('dragstart', e => {\n              e.dataTransfer.setData('text/plain', info.event.id);\n            });\n          },\n          eventDragStop: info => {\n            const jsEvent = info.jsEvent;\n            console.log(jsEvent.pageX);\n            console.log(jsEvent.pageY);\n            if (900 <= jsEvent.pageX && 80 <= jsEvent.pageY) {\n              handleEventDrop(info.event.id);\n            }\n          },\n          eventDrop: handleEventDropOrResize //save event when dropped\n          ,\n          height: \"auto\" // Set calendar height to full viewport height\n          ,\n          width: \"100%\" // Set calendar width to 100% of parent container\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"image-container\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"finishLine\",\n          src: myImage,\n          alt: \"Finish Line\",\n          draggable: \"true\",\n          onDrop: e => {\n            e.preventDefault();\n            const eventId = e.dataTransfer.getData('text/plain');\n            handleEventDrop(eventId);\n          },\n          onDragOver: e => e.preventDefault()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 17\n      }, this), confetti && /*#__PURE__*/_jsxDEV(Confetti, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 30\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"event-list\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Important Dates\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          id: \"lists\",\n          children: importantEventsThisWeek.map((event, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [event.title, \" - \", new Date(event.start).toLocaleDateString()]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 251,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 141,\n    columnNumber: 9\n  }, this);\n}\n_s(WeekPage, \"HFnG7Gslnex8VfBm3CNPrSovlGs=\");\n_c = WeekPage;\nexport default WeekPage;\nvar _c;\n$RefreshReg$(_c, \"WeekPage\");","map":{"version":3,"names":["React","Fullcalendar","dayGridPlugin","timeGridPlugin","interactionPlugin","Draggable","useContext","WeekContext","EventContext","useRef","useEffect","Confetti","myImage","useState","Sidebar","jsxDEV","_jsxDEV","WeekPage","_s","calendarRef","events2","setEvents2","events","confetti","setConfetti","importantEventsThisWeek","setImportantEventsThisWeek","storedEvents","JSON","parse","localStorage","getItem","clearAllEvents","setItem","stringify","calendarApi","current","getApi","removeAllEvents","containerEl","document","getElementById","itemSelector","filterEventsForCurrentWeek","handleEventAdd","event","newEvents","handleEventDrop","eventId","updatedEvents","filter","evt","id","parseInt","setTimeout","handleEventDropOrResize","info","map","start","toISOString","handleEventClick","choice","prompt","title","newTitle","setProp","remove","alert","currentStart","view","currentEnd","filteredEvents","eventDate","Date","imageElement","querySelector","imagePosition","getBoundingClientRect","console","log","leftPos","left","rightPos","right","className","children","fileName","_jsxFileName","lineNumber","columnNumber","ref","plugins","initialView","dateClick","date","dateStr","now","newEvent","allDay","addEvent","headerToolbar","center","customButtons","addEventButton","text","click","timeStr","isNaN","valueOf","eventClick","editable","droppable","eventDidMount","eventEl","el","setAttribute","addEventListener","e","dataTransfer","setData","eventDragStop","jsEvent","pageX","pageY","eventDrop","height","width","src","alt","draggable","onDrop","preventDefault","getData","onDragOver","index","toLocaleDateString","_c","$RefreshReg$"],"sources":["/Users/annalisekimura/Desktop/Calendar/calendar/frontend/src/Pages/Week.js"],"sourcesContent":["import React from 'react';\nimport '../App.css'; \nimport './week.css'\nimport Fullcalendar from \"@fullcalendar/react\";\nimport dayGridPlugin from \"@fullcalendar/daygrid\";\nimport timeGridPlugin from \"@fullcalendar/timegrid\";\nimport interactionPlugin, {Draggable} from \"@fullcalendar/interaction\";\nimport { useContext } from 'react';\nimport { WeekContext } from './WeekContext';\nimport { EventContext } from './EventContext';\nimport { useRef, useEffect } from 'react';\nimport Confetti from \"react-confetti\"\nimport myImage from './FinishBucket.png';\nimport { useState } from 'react';\nimport Sidebar from '../Components/sidebar';\n\n\n\nfunction WeekPage() {\n    const calendarRef = useRef(null);\n    const {events2, setEvents2} = useContext(WeekContext);\n    const {events} = useContext(EventContext);\n    const [confetti, setConfetti] = useState(false);\n    const [importantEventsThisWeek, setImportantEventsThisWeek] = useState([]);\n\n    // Get stored events to display\n    useEffect(() => {\n        const storedEvents = JSON.parse(localStorage.getItem('calendarEventsWeek'));\n        if (storedEvents) {\n            setEvents2(storedEvents)\n        }\n    }, [setEvents2]);\n\n    const clearAllEvents = () => {\n        setEvents2([]);\n        localStorage.setItem('calendarEventsWeek', JSON.stringify([]));\n        const calendarApi = calendarRef.current.getApi();\n        calendarApi.removeAllEvents();\n    };\n\n    // Get finish line image\n    useEffect(() => {\n        let containerEl = document.getElementById('image-container')\n        new Draggable(containerEl, {\n            itemSelector: '.finishLine'\n          });\n        }, []);\n\n    useEffect(() => {\n        if (calendarRef.current) {\n            filterEventsForCurrentWeek();\n        }\n    }, [events, calendarRef.current]);  \n    \n\n    // Add an event\n    const handleEventAdd = (event) => {\n        const newEvents = [...events2, event];\n        setEvents2(newEvents);\n        localStorage.setItem('calendarEventsWeek', JSON.stringify(newEvents));\n    }\n    \n    // Delete event when finished\n    const handleEventDrop = (eventId) => {\n        const updatedEvents = events2.filter(evt => evt.id !== parseInt(eventId, 10));\n        setEvents2(updatedEvents);\n        localStorage.setItem('calendarEventsWeek', JSON.stringify(updatedEvents));\n\n         // Render confetti\n         setConfetti(true);\n         setTimeout(() => setConfetti(false), 3000);\n    };\n\n    // Update calendar when drag event\n    const handleEventDropOrResize = (info) => {\n        const event = info.event;\n        const updatedEvents = events2.map(evt => evt.id === parseInt(event.id, 10) ? {\n            ...evt,\n            start: event.start.toISOString()\n        } : evt);\n        setEvents2(updatedEvents);\n        localStorage.setItem('calendarEventsWeek', JSON.stringify(updatedEvents));\n    };\n\n\n\n    // Delete or edit event when clicked\n    const handleEventClick = (info) => {\n        const event = info.event;\n        const choice = prompt(`Do you want to edit or delete the event \"${event.title}\"?\\nType 'Edit' or 'Delete'`);\n    \n        if (choice === 'Edit') {\n          const newTitle = prompt('Enter the new title for the event:', event.title);\n          if (newTitle) {\n            event.setProp('title', newTitle);\n            const updatedEvents = events2.map(evt => evt.id === event.id ? {...evt, title: newTitle} : evt);\n            setEvents2(updatedEvents);\n            localStorage.setItem('calendarEventsWeek', JSON.stringify(updatedEvents));\n          }\n        } else if (choice === 'Delete') {\n          const updatedEvents = events2.filter(evt => evt.id !== parseInt(event.id, 10));\n          event.remove();\n          setEvents2(updatedEvents);\n          localStorage.setItem('calendarEventsWeek', JSON.stringify(updatedEvents));\n          alert('Event deleted. Now, update your database...');\n        }\n    };\n\n    const filterEventsForCurrentWeek = () => {\n        const calendarApi = calendarRef.current.getApi();\n        const currentStart = calendarApi.view.currentStart;\n        const currentEnd = calendarApi.view.currentEnd;\n\n        const filteredEvents = events.filter(event => {\n            const eventDate = new Date(event.start);\n            return eventDate >= currentStart && eventDate < currentEnd;\n        });\n\n        setImportantEventsThisWeek(filteredEvents);\n\n    }\n\n\n    useEffect (() => {\n        const imageElement = document.querySelector('.finishLine');\n        if (imageElement) {\n            // Get the position relative to the viewport\n            const imagePosition = imageElement.getBoundingClientRect();\n    \n            console.log('Image Position:');\n            const leftPos = imagePosition.left;\n            const rightPos = imagePosition.right;\n    \n            console.log('Right:', imagePosition.right);\n        }\n\n    }, [])\n\n    \n    return (\n        <div className=\"container\">\n            <Sidebar />\n            <div className='content2'>\n                <div className=\"weekly-calendar\">\n                    <h1>Week</h1>\n\n                    {/* Display calendar */}\n                    <Fullcalendar\n                        ref={calendarRef}\n                        plugins={[dayGridPlugin, timeGridPlugin, interactionPlugin]}\n                        initialView=\"timeGridWeek\"\n                        dateClick={function(info) {\n                            var date = info.dateStr\n                            console.log(info.dateStr);\n                            var title = prompt('Enter the event title:');\n                            var id = Date.now();\n                            const calendarApi = calendarRef.current.getApi()\n                            const newEvent = {\n                                id: id,\n                                title: title,\n                                start: date,\n                                allDay: false\n                            }\n                            calendarApi.addEvent(newEvent);\n                            handleEventAdd(newEvent);\n                        }}\n\n                        //header buttons\n                        headerToolbar={{\n                            center: 'addEventButton',\n                        }}\n                        customButtons={{\n                            addEventButton: {\n                                text: 'add event...',\n                                click: function() {\n                                    var dateStr = prompt('Enter a date in YYYY-MM-DD format');\n                                    var timeStr = prompt('Enter a time in T00:00:00 format')\n                                    var date = new Date(dateStr + timeStr); // local time\n                        \n                                    if (!isNaN(date.valueOf())) {\n                                        var title = prompt('Enter the event title:');\n                                        var id = Date.now();\n                                        const calendarApi = calendarRef.current.getApi()\n                                        const newEvent = {\n                                                id: id,\n                                                title: title,\n                                                start: date,\n                                                allDay: false\n                                        }\n                                        calendarApi.addEvent(newEvent);\n                                        handleEventAdd(newEvent);\n                                    } else {\n                                        alert('Invalid date.');\n                                    }\n                                }\n                            }\n                        }}\n                        events={events2}\n                        eventClick={handleEventClick}\n                        editable={true}\n                        droppable={true}\n                        eventDidMount={(info) => {\n                            const eventEl = info.el;\n                            eventEl.setAttribute('draggable', true);\n                            eventEl.addEventListener('dragstart', (e) => {\n                                e.dataTransfer.setData('text/plain', info.event.id);\n                            });\n                        }}\n                        eventDragStop={(info) => {\n                            const jsEvent = info.jsEvent;\n                            console.log(jsEvent.pageX);\n                            console.log(jsEvent.pageY);\n                            if (900 <= jsEvent.pageX && 80 <= jsEvent.pageY) {\n                                handleEventDrop(info.event.id);\n                            }\n                        }}\n                        eventDrop={handleEventDropOrResize} //save event when dropped\n                        height=\"auto\" // Set calendar height to full viewport height\n                        width=\"100%\" // Set calendar width to 100% of parent container\n                    />\n                </div>\n\n                {/* Finish line image, droppable */}\n                <div id=\"image-container\">\n                    <img\n                        className=\"finishLine\"\n                        src={myImage}\n                        alt=\"Finish Line\"\n                        draggable=\"true\"\n                        onDrop={(e) => {\n                            e.preventDefault();\n                            const eventId = e.dataTransfer.getData('text/plain');\n                            handleEventDrop(eventId);\n                            \n                        }}\n                        onDragOver={(e) => e.preventDefault()}\n            \n\n                    />\n                    \n                </div>\n                \n                {/* Render confetti if true */}    \n                {confetti && <Confetti />}\n\n                {/* List of events in month calendar */}\n                <div className=\"event-list\">\n                    <h2>Important Dates</h2>\n                        <ul id=\"lists\">\n                            {importantEventsThisWeek.map((event, index) => (\n                                <li key={index}>\n                                    {event.title} - {new Date(event.start).toLocaleDateString()}\n                                </li>\n                            ))}\n                        </ul>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default WeekPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}