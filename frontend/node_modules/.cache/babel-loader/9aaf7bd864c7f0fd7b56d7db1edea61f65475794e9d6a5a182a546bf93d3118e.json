{"ast":null,"code":"var _jsxFileName = \"/Users/annalisekimura/Desktop/Calendar/calendar/src/Pages/MonthPage.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport '../App.css';\nimport Fullcalendar from \"@fullcalendar/react\";\nimport dayGridPlugin from \"@fullcalendar/daygrid\";\nimport timeGridPlugin from \"@fullcalendar/timegrid\";\nimport interactionPlugin from \"@fullcalendar/interaction\";\nimport { useRef, useEffect } from 'react';\nimport { useContext } from 'react';\nimport { EventContext } from './EventContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MonthPage() {\n  _s();\n  const calendarRef = useRef(null);\n  const {\n    events,\n    setEvents\n  } = useContext(EventContext);\n  useEffect(() => {\n    const storedEvents = JSON.parse(localStorage.getItem('calendarEvents'));\n    if (storedEvents) {\n      setEvents(storedEvents);\n    }\n  }, [setEvents]);\n  useEffect(() => {\n    const calendarApi = calendarRef.current.getApi();\n  }, []);\n  const handleEventAdd = event => {\n    const newEvents = [...events, event];\n    setEvents(newEvents);\n    localStorage.setItem('calendarEvents', JSON.stringify(newEvents));\n  };\n  const handleEventClick = info => {\n    const event = info.event;\n    console.log(event);\n    const options = ['Edit', 'Delete', 'Cancel'];\n    const choice = prompt(`Do you want to edit or delete the event \"${event.title}\"?\\nType 'Edit' or 'Delete'`);\n    if (choice === 'Edit') {\n      const newTitle = prompt('Enter the new title for the event:', event.title);\n      if (newTitle) {\n        event.setProp('title', newTitle);\n        const updatedEvents = events.map(evt => evt.id === event.id ? {\n          ...evt,\n          title: newTitle\n        } : evt);\n        setEvents(updatedEvents);\n        localStorage.setItem('calendarEvents', JSON.stringify(updatedEvents));\n        alert('Event updated. Now, update your database...');\n      } else {\n        alert('Event title cannot be empty.');\n      }\n    } else if (choice === 'Delete') {\n      const updatedEvents = events.filter(evt => evt.id !== event);\n      event.remove();\n      console.log(updatedEvents);\n      setEvents(updatedEvents);\n      localStorage.setItem('calendarEvents', JSON.stringify(updatedEvents));\n      alert('Event deleted. Now, update your database...');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Month\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Fullcalendar, {\n      ref: calendarRef,\n      plugins: [dayGridPlugin, timeGridPlugin, interactionPlugin],\n      initialView: \"dayGridMonth\",\n      headerToolbar: {\n        center: 'addEventButton'\n      },\n      customButtons: {\n        addEventButton: {\n          text: 'add event...',\n          click: function () {\n            var dateStr = prompt('Enter a date in YYYY-MM-DD format');\n            var date = new Date(dateStr + 'T00:00:00'); // will be in local time\n\n            if (!isNaN(date.valueOf())) {\n              // valid?\n              var title = prompt('Enter the event title:');\n              const calendarApi = calendarRef.current.getApi();\n              const newEvent = {\n                id: Date.now(),\n                title: title,\n                start: date,\n                allDay: true\n              };\n              calendarApi.addEvent(newEvent);\n              handleEventAdd(newEvent);\n              alert('Great. Now, update your database...');\n            } else {\n              alert('Invalid date.');\n            }\n          }\n        }\n      },\n      events: events,\n      eventClick: handleEventClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"calendar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 9\n  }, this);\n}\n_s(MonthPage, \"LuckEjHoUg+5RKSlq/D/Nc59xzQ=\");\n_c = MonthPage;\nexport default MonthPage;\nvar _c;\n$RefreshReg$(_c, \"MonthPage\");","map":{"version":3,"names":["React","Fullcalendar","dayGridPlugin","timeGridPlugin","interactionPlugin","useRef","useEffect","useContext","EventContext","jsxDEV","_jsxDEV","MonthPage","_s","calendarRef","events","setEvents","storedEvents","JSON","parse","localStorage","getItem","calendarApi","current","getApi","handleEventAdd","event","newEvents","setItem","stringify","handleEventClick","info","console","log","options","choice","prompt","title","newTitle","setProp","updatedEvents","map","evt","id","alert","filter","remove","children","fileName","_jsxFileName","lineNumber","columnNumber","ref","plugins","initialView","headerToolbar","center","customButtons","addEventButton","text","click","dateStr","date","Date","isNaN","valueOf","newEvent","now","start","allDay","addEvent","eventClick","_c","$RefreshReg$"],"sources":["/Users/annalisekimura/Desktop/Calendar/calendar/src/Pages/MonthPage.js"],"sourcesContent":["import React from 'react';\nimport '../App.css'; \nimport Fullcalendar from \"@fullcalendar/react\";\nimport dayGridPlugin from \"@fullcalendar/daygrid\";\nimport timeGridPlugin from \"@fullcalendar/timegrid\";\nimport interactionPlugin from \"@fullcalendar/interaction\";\nimport { useRef, useEffect } from 'react';\nimport { useContext } from 'react';\nimport { EventContext } from './EventContext';\n\n\nfunction MonthPage() {\n    const calendarRef = useRef(null);\n    const {events, setEvents} = useContext(EventContext);\n\n    useEffect(() => {\n        const storedEvents = JSON.parse(localStorage.getItem('calendarEvents'));\n        if (storedEvents) {\n            setEvents(storedEvents)\n        }\n    }, [setEvents]);\n\n    useEffect(() => {\n        const calendarApi = calendarRef.current.getApi();\n    }, []);\n\n    const handleEventAdd = (event) => {\n        const newEvents = [...events, event];\n        setEvents(newEvents);\n        localStorage.setItem('calendarEvents', JSON.stringify(newEvents));\n    }\n\n    \n    const handleEventClick = (info) => {\n        const event = info.event;\n        console.log(event);\n        const options = ['Edit', 'Delete', 'Cancel'];\n        const choice = prompt(`Do you want to edit or delete the event \"${event.title}\"?\\nType 'Edit' or 'Delete'`);\n    \n        if (choice === 'Edit') {\n          const newTitle = prompt('Enter the new title for the event:', event.title);\n          if (newTitle) {\n            event.setProp('title', newTitle);\n            const updatedEvents = events.map(evt => evt.id === event.id ? {...evt, title: newTitle} : evt);\n            setEvents(updatedEvents);\n            localStorage.setItem('calendarEvents', JSON.stringify(updatedEvents));\n            alert('Event updated. Now, update your database...');\n          } else {\n            alert('Event title cannot be empty.');\n          }\n        } else if (choice === 'Delete') {\n          \n          const updatedEvents = events.filter(evt => evt.id !== event);\n          event.remove();\n          console.log(updatedEvents);\n          setEvents(updatedEvents);\n          localStorage.setItem('calendarEvents', JSON.stringify(updatedEvents));\n          alert('Event deleted. Now, update your database...');\n        }\n      };\n\n    \n    return (\n        \n        <div>\n\n            \n            <h1>Month</h1>\n            <Fullcalendar\n                ref={calendarRef}\n                plugins={[dayGridPlugin, timeGridPlugin, interactionPlugin]}\n                initialView=\"dayGridMonth\"\n                headerToolbar={{\n                    center: 'addEventButton'\n                  }}\n                  customButtons={{\n                    addEventButton: {\n                      text: 'add event...',\n                      click: function() {\n                        var dateStr = prompt('Enter a date in YYYY-MM-DD format');\n                        var date = new Date(dateStr + 'T00:00:00'); // will be in local time\n            \n                        if (!isNaN(date.valueOf())) { // valid?\n                            var title = prompt('Enter the event title:');\n\n                                const calendarApi = calendarRef.current.getApi()\n                                const newEvent = {\n                                    id: Date.now(),\n                                    title: title,\n                                    start: date,\n                                    allDay: true\n                                }\n                          calendarApi.addEvent(newEvent);\n                          handleEventAdd(newEvent);\n                          alert('Great. Now, update your database...');\n                        } else {\n                          alert('Invalid date.');\n                        }\n                      }\n                    }\n                  }}\n                  events={events}\n                  eventClick={handleEventClick}\n                  \n            />\n\n            <div id='calendar'></div>\n            \n        </div>\n    );\n}\n\nexport default MonthPage;\n\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}