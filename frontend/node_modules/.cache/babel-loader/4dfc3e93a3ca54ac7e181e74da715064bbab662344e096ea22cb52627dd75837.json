{"ast":null,"code":"var _jsxFileName = \"/Users/annalisekimura/Desktop/Calendar/calendar/src/Pages/Week.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport '../App.css';\nimport Fullcalendar from \"@fullcalendar/react\";\nimport dayGridPlugin from \"@fullcalendar/daygrid\";\nimport timeGridPlugin from \"@fullcalendar/timegrid\";\nimport interactionPlugin from \"@fullcalendar/interaction\";\nimport { useContext } from 'react';\nimport { EventContext } from './EventContext';\nimport { useRef, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction WeekPage() {\n  _s();\n  const calendarRef = useRef(null);\n  const {\n    events2,\n    setEvents2\n  } = useContext(EventContext);\n  useEffect(() => {\n    const calendarApi = calendarRef.current.getApi();\n    const newEvent = {\n      id: 345,\n      title: \"hello\",\n      start: \"2024-05-06\",\n      allDay: true\n    };\n    calendarApi.addEvent(newEvent);\n    handleEventAdd(newEvent);\n    const storedEvents = JSON.parse(localStorage.getItem('calendarEvents'));\n    if (storedEvents) {\n      setEvents2(storedEvents);\n    }\n  }, [setEvents2]);\n  const handleEventAdd = event => {\n    const newEvents = [...events2, event];\n    setEvents2(newEvents);\n    localStorage.setItem('calendarEvents', JSON.stringify(newEvents));\n  };\n  const handleEventClick = info => {\n    const event = info.event;\n    const choice = prompt(`Do you want to edit or delete the event \"${event.title}\"?\\nType 'Edit' or 'Delete'`);\n    if (choice === 'Edit') {\n      const newTitle = prompt('Enter the new title for the event:', event.title);\n      if (newTitle) {\n        event.setProp('title', newTitle);\n        const updatedEvents = events2.map(evt => evt.id === event.id ? {\n          ...evt,\n          title: newTitle\n        } : evt);\n        setEvents2(updatedEvents);\n        localStorage.setItem('calendarEvents', JSON.stringify(updatedEvents));\n        alert('Event updated. Now, update your database...');\n      } else {\n        alert('Event title cannot be empty.');\n      }\n    } else if (choice === 'Delete') {\n      const updatedEvents = events2.filter(evt => evt.id !== parseInt(event.id, 10));\n      event.remove();\n      setEvents2(updatedEvents);\n      localStorage.setItem('calendarEvents', JSON.stringify(updatedEvents));\n      alert('Event deleted. Now, update your database...');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"weekly-calendar\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Week\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Fullcalendar, {\n        ref: calendarRef,\n        plugins: [dayGridPlugin, timeGridPlugin, interactionPlugin],\n        initialView: \"timeGridWeek\",\n        headerToolbar: {\n          center: 'addEventButton'\n        },\n        customButtons: {\n          addEventButton: {\n            text: 'add event...',\n            click: function () {\n              var dateStr = prompt('Enter a date in YYYY-MM-DD format');\n              var date = new Date(dateStr + 'T00:00:00'); // will be in local time\n\n              if (!isNaN(date.valueOf())) {\n                // valid?\n                var title = prompt('Enter the event title:');\n                var id = Date.now();\n                const calendarApi = calendarRef.current.getApi();\n                const newEvent = {\n                  id: id,\n                  title: title,\n                  start: date,\n                  allDay: true\n                };\n                calendarApi.addEvent(newEvent);\n                handleEventAdd(newEvent);\n                alert('Great. Now, update your database...');\n              } else {\n                alert('Invalid date.');\n              }\n            }\n          }\n        },\n        events2: events2,\n        eventClick: handleEventClick\n        //eventContent={eventContent}\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"event-list\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Important Dates\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        id: \"lists\",\n        children: events2.map((event, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [event.title, \" - \", new Date(event.start).toLocaleDateString()]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 9\n  }, this);\n}\n_s(WeekPage, \"CZYi5bOvckreEjJTZfmRG49882s=\");\n_c = WeekPage;\nexport default WeekPage;\nvar _c;\n$RefreshReg$(_c, \"WeekPage\");","map":{"version":3,"names":["React","Fullcalendar","dayGridPlugin","timeGridPlugin","interactionPlugin","useContext","EventContext","useRef","useEffect","jsxDEV","_jsxDEV","WeekPage","_s","calendarRef","events2","setEvents2","calendarApi","current","getApi","newEvent","id","title","start","allDay","addEvent","handleEventAdd","storedEvents","JSON","parse","localStorage","getItem","event","newEvents","setItem","stringify","handleEventClick","info","choice","prompt","newTitle","setProp","updatedEvents","map","evt","alert","filter","parseInt","remove","className","children","fileName","_jsxFileName","lineNumber","columnNumber","ref","plugins","initialView","headerToolbar","center","customButtons","addEventButton","text","click","dateStr","date","Date","isNaN","valueOf","now","eventClick","index","toLocaleDateString","_c","$RefreshReg$"],"sources":["/Users/annalisekimura/Desktop/Calendar/calendar/src/Pages/Week.js"],"sourcesContent":["import React from 'react';\nimport '../App.css'; \nimport Fullcalendar from \"@fullcalendar/react\";\nimport dayGridPlugin from \"@fullcalendar/daygrid\";\nimport timeGridPlugin from \"@fullcalendar/timegrid\";\nimport interactionPlugin from \"@fullcalendar/interaction\";\nimport { useContext } from 'react';\nimport { EventContext } from './EventContext';\nimport { useRef, useEffect } from 'react';\n\n\nfunction WeekPage() {\n    const calendarRef = useRef(null);\n    const {events2, setEvents2} = useContext(EventContext);\n\n    useEffect(() => {\n        const calendarApi = calendarRef.current.getApi()\n                                    const newEvent = {\n                                        id: 345,\n                                        title: \"hello\",\n                                        start: \"2024-05-06\",\n                                        allDay: true\n                                    }\n                              calendarApi.addEvent(newEvent);\n                              handleEventAdd(newEvent);\n\n        const storedEvents = JSON.parse(localStorage.getItem('calendarEvents'));\n        if (storedEvents) {\n            setEvents2(storedEvents)\n        }\n    }, [setEvents2]);\n\n\n    const handleEventAdd = (event) => {\n        const newEvents = [...events2, event];\n        setEvents2(newEvents);\n        localStorage.setItem('calendarEvents', JSON.stringify(newEvents));\n    }\n\n    \n    const handleEventClick = (info) => {\n        const event = info.event;\n        const choice = prompt(`Do you want to edit or delete the event \"${event.title}\"?\\nType 'Edit' or 'Delete'`);\n    \n        if (choice === 'Edit') {\n          const newTitle = prompt('Enter the new title for the event:', event.title);\n          if (newTitle) {\n            event.setProp('title', newTitle);\n            const updatedEvents = events2.map(evt => evt.id === event.id ? {...evt, title: newTitle} : evt);\n            setEvents2(updatedEvents);\n            localStorage.setItem('calendarEvents', JSON.stringify(updatedEvents));\n            alert('Event updated. Now, update your database...');\n          } else {\n            alert('Event title cannot be empty.');\n          }\n        } else if (choice === 'Delete') {\n          \n          const updatedEvents = events2.filter(evt => evt.id !== parseInt(event.id, 10));\n          event.remove();\n          \n          setEvents2(updatedEvents);\n          \n          localStorage.setItem('calendarEvents', JSON.stringify(updatedEvents));\n          alert('Event deleted. Now, update your database...');\n        }\n      };\n    return (\n        <div className=\"container\">\n            <div className=\"weekly-calendar\">\n                <h1>Week</h1>\n                <Fullcalendar\n                    ref={calendarRef}\n                    plugins={[dayGridPlugin, timeGridPlugin, interactionPlugin]}\n                    initialView=\"timeGridWeek\"\n                    headerToolbar={{\n                        center: 'addEventButton'\n                      }}\n                      customButtons={{\n                        addEventButton: {\n                          text: 'add event...',\n                          click: function() {\n                            var dateStr = prompt('Enter a date in YYYY-MM-DD format');\n                            var date = new Date(dateStr + 'T00:00:00'); // will be in local time\n                \n                            if (!isNaN(date.valueOf())) { // valid?\n                                var title = prompt('Enter the event title:');\n                                var id = Date.now();\n    \n                                    const calendarApi = calendarRef.current.getApi()\n                                    const newEvent = {\n                                        id: id,\n                                        title: title,\n                                        start: date,\n                                        allDay: true\n                                    }\n                              calendarApi.addEvent(newEvent);\n                              handleEventAdd(newEvent);\n                              alert('Great. Now, update your database...');\n                            } else {\n                              alert('Invalid date.');\n                            }\n                          }\n                        }\n                      }}\n                      events2={events2}\n                      eventClick={handleEventClick}\n                      //eventContent={eventContent}\n                />\n                \n            </div>\n            <div className=\"event-list\">\n                <h2>Important Dates</h2>\n                <ul id=\"lists\">\n                    {events2.map((event, index) => (\n                        <li key={index}>\n                            {event.title} - {new Date(event.start).toLocaleDateString()}\n                        </li>\n                    ))}\n                </ul>\n            </div>\n            \n        </div>\n    );\n}\n\nexport default WeekPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}